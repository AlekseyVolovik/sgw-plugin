<div class="sgw-catalog">
    <div class="sgw-catalog__sidebar">
        {% include '@blocks/pinned-leagues/pinned-leagues.twig' %}

        {% include '@blocks/filter/leagues-by-country.twig' with {
            'filters_leagues_by_country': filters_leagues_by_country
        } %}
    </div>
	<div class="sgw-sidebar-overlay" aria-hidden="true"></div>
    <div class="sgw-catalog__content">
        <div class="sgw-catalog__filters">
            <div class="sgw-filters__filter-status">
                <ul class="sgw-filters__status-list">
                    <li class="sgw-filters__status-item sgw-filters__status-item--{{ 'live' }}{% if active_status == 'live' %} sgw-filters__status-item--active{% endif %} sgw-filters__status-item--live">
                        <button class="sgw-filters__status-link tab-btn" data-status="live" type="button">Live</button>
                    </li>
                    <li class="sgw-filters__status-item sgw-filters__status-item--{{ 'upcoming' }}{% if active_status == 'upcoming' %} sgw-filters__status-item--active{% endif %}">
                        <button class="sgw-filters__status-link tab-btn" data-status="upcoming" type="button">Upcoming</button>
                    </li>
                    <li class="sgw-filters__status-item sgw-filters__status-item--{{ 'finished' }}{% if active_status == 'finished' %} sgw-filters__status-item--active{% endif %}">
                        <button class="sgw-filters__status-link tab-btn" data-status="finished" type="button">Finished</button>
                    </li>
                </ul>
            </div>
            <button class="sgw-sidebar-toggle" type="button" aria-label="Open leagues">
                <span></span>
            </button>
        </div>
        
        <h2 class="sgw-catalog__title">{{ leagueName }} ({{ countrySlug|capitalize }})</h2>

        <div class="sgw-catalog__events">
            {% for status, match_cards in match_cards_by_status %}
                <div class="sgw-catalog__events-item match-group" data-status="{{ status }}" style="{% if status != active_status %}display:none{% endif %}">
                    {% if match_cards is not empty %}
                        {% include '@blocks/match-cards/view.twig' with { 'match_cards': match_cards } %}
                    {% else %}
                        {% include '@components/no-matches.twig' with {
                            no_matches_card: {
                                title: "No matches available",
                                subtitle: "Please check back later or choose another tab."
                            }
                        } %}
                    {% endif %}
                </div>
            {% endfor %}
        </div>
    </div>
</div>

<script>
    const tabButtons = document.querySelectorAll('.tab-btn');
    const groups = document.querySelectorAll('.match-group');

    tabButtons.forEach(btn => {
        btn.addEventListener('click', () => {
            const status = btn.getAttribute('data-status');

            // Удаляем активный класс со всех <li>
            document.querySelectorAll('.sgw-filters__status-item').forEach(li => {
                li.classList.remove('sgw-filters__status-item--active');
            });

            // Добавляем активный класс на <li>, в котором находится нажатая кнопка
            const li = btn.closest('.sgw-filters__status-item');
            if (li) li.classList.add('sgw-filters__status-item--active');

            // Показ/скрытие соответствующих блоков матчей
            groups.forEach(group => {
                group.style.display = group.getAttribute('data-status') === status ? 'block' : 'none';
            });
        });
    });
</script>
<script>
  const body = document.body;
  const btn  = document.querySelector('.sgw-sidebar-toggle');
  const sidebar = document.querySelector('.sgw-catalog__sidebar');
  const overlay = document.querySelector('.sgw-sidebar-overlay');

  const open = () => body.classList.add('sgw-sidebar-open');
  const close = () => body.classList.remove('sgw-sidebar-open');
  const isOpen = () => body.classList.contains('sgw-sidebar-open');

  if (btn) btn.addEventListener('click', () => isOpen() ? close() : open());
  if (overlay) overlay.addEventListener('click', close);

  // Клик вне сайдбара закрывает его
  document.addEventListener('click', (e) => {
    if (!isOpen()) return;
    const clickInsideSidebar = sidebar && sidebar.contains(e.target);
    const clickOnToggle = btn && btn.contains(e.target);
    if (!clickInsideSidebar && !clickOnToggle) close();
  });

  // Закрыть по Esc
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && isOpen()) close();
  });

  // Клик по ссылке внутри сайдбара — закрыть
  if (sidebar) {
    sidebar.addEventListener('click', (e) => {
      const a = e.target.closest('a');
      if (a) close();
    });
  }
</script>

